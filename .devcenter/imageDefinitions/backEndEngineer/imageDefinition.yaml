#######################################################################################
# eShop - Backend Engineer Image Definition
# Purpose: Configures a development environment for backend engineering tasks
# Last Updated: April 25, 2025
#######################################################################################

# Schema version for the image definition format
$schema: "1.0"

# Unique identifier for this image definition
name: eShop-backend-engineer

# Human-readable description of the environment purpose
description: "This image definition sets up a development environment for backend engineers."

# Base image to use from Microsoft's catalog
# Note: This image includes Visual Studio 2022 Enterprise with Windows 11 and M365
# Reference: https://learn.microsoft.com/en-us/azure/dev-box/tutorial-dev-box-service
image: microsoftvisualstudio_visualstudioplustools_vs-2022-ent-general-win11-m365-gen2

# Installation tasks to configure the development environment
tasks:
  #######################################################################################
  # SECTION: Core Environment Setup
  # Purpose: Install foundational tools and configure the PowerShell environment
  #######################################################################################

  # Install PSDSCResources module for PowerShell environment configuration
  # This enables PowerShell DSC functionality for subsequent configuration tasks
  - name: ~/powershell
    description: "Configure PowerShell environment and install DSC resources"
    parameters:
      command: |
        # Set execution policy to allow running scripts for this session
        Set-ExecutionPolicy -ExecutionPolicy Bypass -Force -Scope Process

        # Install NuGet package provider required for PowerShell modules
        Install-PackageProvider -Name NuGet -Force -Scope AllUsers

        # Configure PowerShell Gallery as a trusted source
        Set-PSRepository -Name "PSGallery" -InstallationPolicy Trusted

        # Install DSC resources for system configuration
        Install-Module -Name PSDSCResources -Force -AllowClobber -Scope AllUsers

  #######################################################################################
  # SECTION: Common Development Tools
  # Purpose: Install shared tools used across engineering teams
  #######################################################################################

  # Import common engineering tools configuration
  # This imports a predefined set of tools commonly used across engineering teams
  - name: ~/winget
    description: "Import common engineering tools and configurations"
    parameters:
      # Source URL for the configuration file containing common tools
      downloadUrl: "https://raw.githubusercontent.com/Evilazaro/DevExp-DevBox/refs/heads/main/.configuration/devcenter/workloads/common-config.dsc.yaml"
      # Local path where the configuration file will be saved
      configurationFile: "c:\\winget\\common-config.dsc.yaml"

  # Install GitHub Desktop - GUI tool for Git repository management
  # Provides visual interface for commits, branches, and pull requests
  - name: ~/winget
    description: "Install GitHub Desktop for visual Git management"
    parameters:
      package: "GitHub.GitHubDesktop"

  # Clone the eShop repository into the workspace
  # This provides immediate access to project code and resources
  - name: ~/git-clone
    description: "Clone the eShop repository to the local workspace"
    parameters:
      # Source repository URL for the project code
      repositoryUrl: https://github.com/Evilazaro/eShop.git
      # Local directory where the repository will be cloned
      directory: Z:\Workspaces

  #######################################################################################
  # SECTION: Backend Development Environment
  # Purpose: Install specialized tools for backend engineering tasks
  #######################################################################################

  # Import backend-specific development tools
  # This includes database tools, API development frameworks, and server utilities
  - name: ~/winget
    description: "Install specialized backend development tools"
    parameters:
      # Backend-specific tools configuration including database tools,
      # API development tools, server frameworks, etc.
      downloadUrl: "https://raw.githubusercontent.com/Evilazaro/DevExp-DevBox/refs/heads/main/.configuration/devcenter/workloads/common-backend-config.dsc.yaml"
      # Local path where the configuration file will be saved
      configurationFile: "c:\\winget\\common-backend-config.dsc.yaml"

# User-specific tasks that can be customized by individual developers
userTasks:
  #######################################################################################
  # SECTION: Optional Backend Tools
  # Purpose: Additional tools that engineers can install based on project needs
  #######################################################################################

  # Import optional backend development tools
  # This includes specialized tools for specific backend scenarios
  # Not installed by default to keep base image lean
  - name: ~/winget
    description: "Install additional backend-specific tools"
    parameters:
      # Contains optional tools that backend engineers might need based on specific projects
      downloadUrl: "https://raw.githubusercontent.com/Evilazaro/DevExp-DevBox/refs/heads/main/.configuration/devcenter/workloads/common-backend-usertasks-config.dsc.yaml"
      # Local path where the configuration file will be saved
      configurationFile: "c:\\winget\\common-backend-usertasks-config.dsc.yaml"

  #######################################################################################
  # SECTION: Project Build and Validation
  # Purpose: Build and verify the solution to ensure development environment is working
  #######################################################################################

  # Build and test the eShop solution
  # This validates that all development dependencies are correctly installed
  # and ensures the project can be built and tested in the new environment
  - name: ~/powershell
    description: "Build and test the eShop solution"
    parameters:
      command: |
        # Set execution policy to allow running scripts for this session
        Set-ExecutionPolicy -ExecutionPolicy Bypass -Force -Scope Process
        
        dotnet workload update --ignore-failed-sources
        # Restore NuGet dependencies for the solution
        dotnet restore Z:\Workspaces\eShop\eShop.sln

        # Build the solution in Release configuration without restoring packages again
        dotnet build Z:\Workspaces\eShop\ --configuration Release --no-restore
        dotnet test Z:\Workspaces\eShop\ --configuration Release --no-restore
