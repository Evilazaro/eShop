name: Release
# Run when commits are pushed to main
on:
  workflow_dispatch:

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read



jobs:
  build:
    uses: ./.github/workflows/dotnet-build-and-unit-tests.yml
    strategy:
      matrix:
        dotnet-version: [8,9]
    with:
      solution: './eShop.Web.slnf'
      test: './eShop.Web.slnf'
      dotnet-version: ${{ matrix.dotnet-version }}
      configuration: 'Debug'
      verbosity: 'minimal'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x.x

      - name: Update OS packages
        run: |
          echo "Updating OS packages..."
          sudo apt-get update
          sudo apt-get upgrade -y
          echo "Finished updating OS packages."

      - name: Install and Update .NET Workloads
        run: |
            echo "Installing .NET workloads..."
            dotnet workload install aspire
            dotnet workload install wasm-tools
            echo "Finished installing .NET workloads."
            
            echo "Updating .NET workloads..."
            dotnet workload update
            echo "Finished updating .NET workloads."

      - name: Log in with Azure (Federated Credentials)
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh


      - name: Provision Infrastructure
        run: azd provision --no-prompt
        env:
          AZURE_EVENTBUS_PASSWORD: ${{ secrets.AZURE_EVENTBUS_PASSWORD }}
          AZURE_POSTGRES_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}
          AZURE_REDIS_PASSWORD: ${{ secrets.AZURE_REDIS_PASSWORD }}

      - name: Deploy Application
        run: azd deploy --no-prompt
        env:
          AZURE_EVENTBUS_PASSWORD: ${{ secrets.AZURE_EVENTBUS_PASSWORD }}
          AZURE_POSTGRES_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}
          AZURE_REDIS_PASSWORD: ${{ secrets.AZURE_REDIS_PASSWORD }}
        
