name: Build and Run Unit Tests for .NET Solutions

on:
  workflow_call:
    inputs:
      solution:
        description: 'The solution or project file to build'
        type: string
        required: true
      test:
        description: 'The test project or solution file to run'
        type: string
        required: true
      dotnet-version:
        description: 'The .NET version to use (allowed values: 6, 7, 8, 9)'
        type: number
        default: 9
        required: true
      configuration:
        description: 'The build configuration to use (allowed values: Debug, Release)'
        type: string
        default: 'Debug'
        required: true
      verbosity:
        description: 'The verbosity level to use (allowed values: quiet, minimal, normal, detailed, diagnostic)'
        type: string
        default: 'minimal'
        required: true

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Validate inputs
        run: |
          # Validate verbosity (case-insensitive)
          ALLOWED_VERBOSITY="quiet minimal normal detailed diagnostic"
          VERB=$(echo "${{ inputs.verbosity }}" | tr '[:upper:]' '[:lower:]')
          if ! echo "$ALLOWED_VERBOSITY" | grep -w -q "$VERB"; then
            echo "Invalid verbosity: '${{ inputs.verbosity }}'. Allowed values are: $ALLOWED_VERBOSITY"
            exit 1
          fi
          echo "Verbosity '${{ inputs.verbosity }}' is valid."

          # Validate configuration (case-insensitive: Debug or Release)
          ALLOWED_CONFIGS="debug release"
          CONFIG=$(echo "${{ inputs.configuration }}" | tr '[:upper:]' '[:lower:]')
          if ! echo "$ALLOWED_CONFIGS" | grep -w -q "$CONFIG"; then
            echo "Invalid configuration: '${{ inputs.configuration }}'. Allowed values are: Debug or Release"
            exit 1
          fi
          echo "Configuration '${{ inputs.configuration }}' is valid."

  build-and-test:
    needs: validate-inputs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '${{ inputs.dotnet-version }}.0.x'

      - name: Update OS packages
        run: |
          echo "Updating OS packages..."
          sudo apt-get update
          sudo apt-get upgrade -y
          echo "Finished updating OS packages."

      - name: Install and Update .NET Workloads
        run: |
            echo "Installing .NET workloads..."
            dotnet workload install aspire
            dotnet workload install wasm-tools
            echo "Finished installing .NET workloads."
            
            echo "Updating .NET workloads..."
            dotnet workload update
            echo "Finished updating .NET workloads."

      - name: Restore and Install Application Dependencies
        run: dotnet restore ${{ inputs.solution }} --verbosity ${{ inputs.verbosity }}

      - name: Build Application
        run: dotnet build ${{ inputs.solution }} --configuration ${{ inputs.configuration }} --no-restore --verbosity ${{ inputs.verbosity }}

      - name: Publish Debug Application Binary files
        run: dotnet publish ${{ inputs.solution }} --configuration ${{ inputs.configuration }} --no-restore --verbosity ${{ inputs.verbosity }} --output ${{ github.workspace }}/bin/Debug/${{ inputs.dotnet-version }}.0/publish

      - name: Upload Debug Application Binary files
        uses: actions/upload-artifact@v4
        with:
          name: debug-binaries
          path: ${{ github.workspace }}/bin/Debug/${{ inputs.dotnet-version }}.0/publish
          retention-days: 5

      - name: Run Unit Tests
        run: |
          mkdir ${{ github.workspace }}/test-results
          chmod -R 777 ${{ github.workspace }}/test-results
          dotnet test ${{ inputs.test }} --configuration ${{ inputs.configuration }} --no-restore --verbosity ${{ inputs.verbosity }} --results-directory ${{ github.workspace }}/test-results

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ github.workspace }}/test-results
          retention-days: 5